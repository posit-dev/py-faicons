name: Python package

on:
  workflow_dispatch:
  push:
    branches: ["main", "rc-*"]
  pull_request:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dev version of htmltools
        run: |
          pip install wheel https://github.com/rstudio/py-htmltools/tarball/main

      - name: Install dependencies
        run: pip install -e ".[dev,test]"

      - name: Install
        run: |
          make install

      - name: Lint with flake8
        run: |
          make lint

      - name: Run unit tests
        run: |
          make test

  deploy:
    name: "Deploy to PyPI"
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: "Set up Python 3.8"
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      - name: "Build Package"
        run: |
          make dist

      # test deploy ----
      - name: "Test Deploy to PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1
        if: startsWith(github.event.release.name, 'TEST')
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      ## prod deploy ----
      - name: "Deploy to PyPI"
        uses: pypa/gh-action-pypi-publish@master
        if: startsWith(github.event.release.name, 'faicons')
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
